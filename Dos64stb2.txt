
  What is Dos64stb2?

  Dos64stb2 is a variant of Dos64stb. In many aspects it behaves like
  Dos64stb, with the following differences:

   - it doesn't require the image to contain base relocations, because
     it should be able to load the image at its prefered loading address.
   - it does not identity-map the first 64 GB of physical memory. Instead,
     just the memory for the image, stack & heap, the conventional memory
     0-fffffh and the IDT is mapped.
   - it doesn't use 2 MB pages, but the usual 4 kB pages.
   - there are no restrictions for the image's base address, it may be any
     valid 64-bit address.
   - the IDT is mapped at linear address 100000h, just above conventional
     memory; paging tables are not mapped at all. So the memory layout is:

   address
   ---------------------------------------------------
                   ~                                ~
                   +--------------------------------+
                   | Heap (size from PE header)     |
                   +--------------------------------+
                   | Stack (size from PE header)    |
                   +--------------------------------+
                   | Image, starting with PE header |
   image base:     +--------------------------------+
                   ~                                ~
   000000101000:   +--------------------------------+
                   | IDT                            |
   000000100000:   +--------------------------------+
                   | conventional memory            |
   000000000000:   +--------------------------------+  


   Note that the valid address space is split into two parts:

   1. 0000000000000000-00007fffffffffff
   2. ffff800000000000-ffffffffffffffff

   or, in other words, the upper 17 bits of the address must be
   identical. The image, including stack and heap, must fit in
   one of those 2 parts. So, for example, an image with base 
   address 7fffffff0000 and size of image+stack+heap > 64 kB cannot
   be loaded.
