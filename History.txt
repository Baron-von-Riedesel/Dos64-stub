
   18.12.2020:
   - printf implementation made more readable.

   24.10.2020:
   - dos64stb.asm: CR3 was set rather early and assumed that it won't
     be changed in DOS/XMS - which isn't always true (i.e.: HimemSX is
     loaded and the disk cache program uses extended memory beyond 4 GB).

   20.3.2020:
   - IRQ 0+1 (timer+keyboard) now routed to real-mode, in both Dos64stb
     and Dos64stb2.

   12.3.2020:
   - Dos64stb2: IRQ 1 (keyboard) now routed to real-mode.
   - bugfix in JWasm, fixups in 64-bit code will be relative if the target
     segment is 16/32-bit. This allows 64-bit code to directly address 
     variables in 16/32-bit segments.

   17.2.2020:
   - created a second variant of Dos64stb, name Dos64stb2.

   9.2.2020:
   - paging tables and IDT located now before the image, so a heap
     may be initialized above the stack.
   - paging tables setup now done in real-mode to minimize interrupt
     disabled time.
   - keyboard read when interrupt request of keyboard so it won't stop.
   - added DPMI function ax=203h (set exception vector).
   - ensured that Ctrl-C will do a clean exit.

   5.2.2020:
   - no restriction for value of RSP anymore when int 21h is called.
   - transfer flags bits 0-7 from real-mode DOS to 64-bit.
   - sample in C added (TestC.c).
   - Win64 compatible printf.asm added, used by TestC.

   30.1.2020:
   - carry flag of real-mode DOS call wasn't transfered to 64-bit.

   26.1.2020:
   - removed 32-bit segment, jump directly from 16-bit to 64-bit.
   - reprogram master pic only, IRQ0-7 mapped at INT 78-7Fh.
   - implemented DPMI function 0x300 (simulate real-mode interrupt);
     this function is used by the int 21h emulation.
